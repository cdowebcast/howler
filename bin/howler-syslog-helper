#!/usr/bin/python -tt
# Copyright (C) 2012 by The Linux Foundation and contributors
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import os
import re

import logging

logger = logging.getLogger(__name__)

if len(sys.argv) != 2:
    print 'Usage: %s syslog-line' % (sys.argv[0])
    sys.exit(1)

logline = sys.argv[1]

## XXX: Need to not hardcode this
CONFIG  = '/etc/howler/howler.ini'
REGEXES = '/etc/howler/syslog-regexes'

fh = open(REGEXES, 'r')
while True:
    regline = fh.readline()
    if not regline:
        sys.exit(0)

    regline = regline.strip()

    if not len(regline) or regline[0] == '#':
        continue

    res = re.search(regline, logline)

    if res:
        import howler
        from ConfigParser import ConfigParser

        hostname = None
        daemon   = None

        ini = ConfigParser()
        ini.read(CONFIG)

        config = {}

        for (option, value) in ini.items('main'):
            config[option] = value

        logger.setLevel(logging.DEBUG)

        ch = logging.StreamHandler()
        formatter = logging.Formatter('%(message)s')
        ch.setFormatter(formatter)

        ch.setLevel(logging.CRITICAL)

        logger.addHandler(ch)

        if 'logfile' in config.keys() and len(config['logfile']):
            ch = logging.FileHandler(config['logfile'])
            formatter = logging.Formatter("[%(process)d] %(asctime)s - %(levelname)s - %(message)s")
            ch.setFormatter(formatter)

            loglevel = logging.INFO

            if 'loglevel' in config.keys():
                if config['loglevel'] == 'debug':
                    loglevel = logging.DEBUG

            ch.setLevel(loglevel)
            logger.addHandler(ch)

        # push our logger into howler to override the default
        howler.logger = logger

        logger.debug('syslog line received: %s' % logline)
        logger.debug('matching regex: %s' % regline)

        fields = res.groupdict()
        if 'hostname' in fields.keys():
            hostname = fields['hostname']
        if 'daemon' in fields.keys():
            daemon = fields['daemon']

        howler.check(config, fields['userid'], fields['ipaddr'],
                hostname=hostname, daemon=daemon, sendmail=True)

        sys.exit(0)

